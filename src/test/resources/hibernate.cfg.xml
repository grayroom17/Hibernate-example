<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <property name="connection.url">jdbc:postgresql://localhost:5434/postgres</property>
        <property name="connection.username">postgres</property>
        <property name="connection.password">postgres</property>
        <property name="connection.driver_class">org.postgresql.Driver</property>
        <property name="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</property>
        <property name="hibernate.connection.CharSet">utf8</property>
        <property name="hibernate.connection.characterEncoding">utf8</property>
        <property name="hibernate.connection.useUnicode">true</property>
        <property name="show_sql">true</property>
        <property name="format_sql">true</property>
        <property name="hibernate.hbm2ddl.auto">validate</property>
        <property name="hbm2ddl.auto">validate</property>

        <mapping class="com.example.hibernate.entity.User"/>
        <mapping class="com.example.hibernate.entity.Company"/>
        <mapping class="com.example.hibernate.entity.Profile"/>

        <mapping class="com.example.hibernate.primarykeytypes.UserWithSequence"/>
        <mapping class="com.example.hibernate.primarykeytypes.UserWithTableGenerator"/>
        <mapping class="com.example.hibernate.primarykeytypes.UserWithCompositePrimaryKey"/>
        <mapping class="com.example.hibernate.primarykeytypes.ProfileWithPrimaryKeyAsForeignKey"/>
        <mapping class="com.example.hibernate.primarykeytypes.UserForPrimaryKeyAsForeignKeyCheck"/>

        <mapping class="com.example.hibernate.many.to.one.CompanyForManyToOneTests"/>
        <mapping class="com.example.hibernate.many.to.one.UserForManyToOneTests"/>
        <mapping class="com.example.hibernate.many.to.one.UserWithManyToOneWithOptionalFalse"/>
        <mapping class="com.example.hibernate.many.to.one.UserWithManyToOneWithFetchLazy"/>
        <mapping class="com.example.hibernate.many.to.one.UserWithCascadeTypeAll"/>

        <mapping class="com.example.hibernate.one.to.many.CompanyForOneToManyTestsWithNoExcludedManyFieldFromToStringAndEqualsAndHashCodeMethods"/>
        <mapping class="com.example.hibernate.one.to.many.UserForOneToManyTestsNotExcludedManyFieldFromToStringAndEqualsAndHashCodeMethods"/>
        <mapping class="com.example.hibernate.one.to.many.CompanyForOneToManyTests"/>
        <mapping class="com.example.hibernate.one.to.many.UserForOneToManyTests"/>
        <mapping class="com.example.hibernate.one.to.many.CompanyForOneToManyTestsWithFetchEager"/>
        <mapping class="com.example.hibernate.one.to.many.CompanyForOneToManyTestsWithoutCascadeTypesAndOrphanRemovalFalse"/>
        <mapping class="com.example.hibernate.one.to.many.UserForOneToManyTestsWithFetchEager"/>
        <mapping class="com.example.hibernate.one.to.many.UserForOneToManyTestsWithoutCascadeTypesAndOrphanRemovalFalse"/>

        <mapping class="com.example.hibernate.one.to.one.owningside.ProfileForOneToOneOwningSideTests"/>
        <mapping class="com.example.hibernate.one.to.one.owningside.UserForOneToOneOwningSideTests"/>
        <mapping class="com.example.hibernate.one.to.one.owningside.ProfileForOneToOneOwningSideTestsWithNotExcludedInverseSideFromToStringAndEqualsAndHashCodeMethods"/>
        <mapping class="com.example.hibernate.one.to.one.owningside.UserForOneToOneOwningSideTestsNotExcludedManyFieldFromToStringAndEqualsAndHashCodeMethods"/>
        <mapping class="com.example.hibernate.one.to.one.owningside.ProfileForOneToOneOwningSideTestsWithFetchLazy"/>
        <mapping class="com.example.hibernate.one.to.one.owningside.UserForOneToOneOwningSideTestsOwningSideFetchLazy"/>
        <mapping class="com.example.hibernate.one.to.one.owningside.ProfileForOneToOneOwningSideTestsWithoutCascadeTypesAndOrphanRemovalFalse"/>
        <mapping class="com.example.hibernate.one.to.one.owningside.UserForOneToOneOwningSideTestsWithoutCascadeTypes"/>

        <!-- DB schema will be updated if needed -->
        <!-- <property name="hibernate.hbm2ddl.auto">update</property> -->
    </session-factory>
</hibernate-configuration>